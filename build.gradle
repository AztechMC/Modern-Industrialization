plugins {
    id 'fabric-loom' version '0.4-SNAPSHOT'
    id 'maven'
    id 'maven-publish'
    id 'com.diffplug.spotless' version '5.6.1'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

version = project.mod_version

repositories {
    // for KJS
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    // for ARRP
    maven {
        url = 'https://raw.githubusercontent.com/Devan-Kerman/Devan-Repo/master/'
    }
    // for Cardinal Components
    maven {
        name = "Ladysnake Libs"
        url = "https://dl.bintray.com/ladysnake/libs"
    }
    // for Patchouli
    maven { url 'https://maven.blamejared.com' }
    // for LBA
    maven {
        name = "BuildCraft"
        url = "https://mod-buildcraft.com/maven"
    }
    // for HWYLA
    maven {
        url "https://maven.tehnut.info"
        content {
            includeGroup "mcp.mobius.waila"
        }
    }
    // for AE2
    maven {
        name "Modmaven"
        url "https://modmaven.dev"
        content {
            includeGroup "appeng"
        }
    }
    // for Astromine, KJS and Indrev
    maven {
        name 'Jitpack for MI'
        url 'https://jitpack.io'
        content {
            includeGroup "com.github.KubeJS-Mods"
            includeGroup "com.github.Mixinors.Astromine"
            includeGroup "com.github.GabrielOlvH"
            includeGroup "com.github.Technici4n"
            /* To build indrev */
            includeGroup "com.github.Draylar"
            /* To build astromine */
            includeGroup "com.github.vini2003"
            includeGroup "com.github.Shnupbups"
        }
    }
    // for custom built packages
    maven {
        name "MI GitHub Packages"
        url "https://maven.pkg.github.com/AztechMC/Modern-Industrialization"
        credentials {
            username = project.mi_read_gpr_user
            password = project.mi_read_gpr_key_part1 + project.mi_read_gpr_key_part2
        }
    }
    // to build indrev
    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
        content {
            includeGroup "io.github.cottonmc"
        }
    }
    // to build Astromine
    maven {
        name = "Earthcomputer"
        url = "https://dl.bintray.com/earthcomputer/mods"
        content {
            includeGroup "net.earthcomputer"
        }
    }
    maven {
        name = "Wrenchable"
        url = "https://dl.bintray.com/zundrel/wrenchable"
        content {
            includeGroup "com.zundrel"
        }
    }
    maven {
        name = "dblsaiko"
        url = "https://maven.dblsaiko.net/"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Dependencies
    modImplementation "net.devtech:arrp:${project.arrp_version}"
    include "net.devtech:arrp:${project.arrp_version}"
    modImplementation "io.github.onyxstudios:Cardinal-Components-API:${project.cardinal_components_version}"
    include "io.github.onyxstudios:Cardinal-Components-API:${project.cardinal_components_version}"
    modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei_version}"
    modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"
    include "vazkii.patchouli:Patchouli:${project.patchouli_version}"
    modApi "alexiil.mc.lib:libblockattributes-all:${project.lba_version}"
    include "alexiil.mc.lib:libblockattributes-all:${project.lba_version}"
    modApi "me.shedaniel.cloth.api:cloth-armor-api-v1:${project.cloth_api_version}"
    modApi "me.shedaniel.cloth.api:cloth-common-events-v1:${project.cloth_api_version}"
    modApi "me.shedaniel.cloth.api:cloth-durability-bar-api-v1:${project.cloth_api_version}"
    include "me.shedaniel.cloth.api:cloth-armor-api-v1:${project.cloth_api_version}"
    include "me.shedaniel.cloth.api:cloth-common-events-v1:${project.cloth_api_version}"
    include "me.shedaniel.cloth.api:cloth-durability-bar-api-v1:${project.cloth_api_version}"
    modImplementation "mcp.mobius.waila:Hwyla:${project.hwyla_version}"
    modImplementation "me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}"
    include "me.sargunvohra.mcmods:autoconfig1u:${project.auto_config_version}"
    modImplementation "io.github.prospector:modmenu:${project.mod_menu_version}"
    modImplementation "curse.maven:kubejs-395864:3183435"
    include "curse.maven:kubejs-395864:3183435"
    modApi "teamreborn:energy:${project.tr_energy_version}"
    include "teamreborn:energy:${project.tr_energy_version}"

    // Other mods for testing purposes
    modRuntime "appeng:appliedenergistics2-fabric:${project.appeng_version}"
    modRuntime "com.github.Mixinors.Astromine:astromine:${project.astromine_commit}"
    //modRuntime ("com.github.GabrielOlvH:Industrial-Revolution:${project.indrev_commit}") {
    //    exclude group: "teamreborn", module: "energy"
    //}
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}

spotless {
    format 'misc', {
        target '*.gradle', '*.md', '.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        targetExclude '**/MIFluids.java', '**/MIMaterials.java', '**/MIOreGenerators.java', '**/MITags.java'

        importOrder()

        removeUnusedImports()

        eclipse().configFile('eclipse-format.xml')

        indentWithSpaces()
        endWithNewline()
        licenseHeaderFile 'LICENSE.java'
    }
}
